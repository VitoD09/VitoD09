
Skip to content

DEV Community
Create account

0
Jump to Comments

9
Save

Boost

Cover image for Como adicionar o Snake Game (jogo da cobrinha) no seu perfil do Github üêç
Henrique Lopes
Henrique Lopes
Posted on 4 de jan. de 2022


75

3
Como adicionar o Snake Game (jogo da cobrinha) no seu perfil do Github üêç
#
github
Primeiramente devo deixar claro que esse artigo foi desenvolvido com base em v√°rios outros artigos e reconstru√≠do para deixar o mais claro poss√≠vel a forma para inserir o Snake Game em seu perfil.

Funcionamento. "Contributions in the last year":
Basicamente o Snake game funciona realizando uma coleta da sua tabela de contribui√ß√µes no Github. ele faz a renderiza√ß√£o dessas informa√ß√µes e gera dois arquivos, um em formato gif e outro em svg. S√£o esses arquivos que iremos utilizar para inserir a anima√ß√£o no perfil do Github.

Repositorio do projeto a ser utilizado: Platane/snk

Exemple

Requisito. "Reposit√≥rio base":
Para que voc√™ possa prosseguir √© necess√°rio que voc√™ tenha o reposit√≥rio do perfil (reposit√≥rio com o mesmo nome de usu√°rio), por√©m para gerar os arquivos tamb√©m funciona em outro reposit√≥rio.

Actions. "Configura√ß√£o inicial":
Inicialmente √© necess√°rio que voc√™ acesse o seu reposit√≥rio escolhido e v√° em Settings.

Configura√ß√£o inicial

No menu vertical ao lado esquerdo selecione o menu Actions e em seguida ative a permiss√£o ‚ÄúAllow all actions‚Äù. Tamb√©m √© poss√≠vel selecionar diretamente o reposit√≥rio.

Ative a permiss√£o

Actions. "Criando Gerador":
Agora que temos o reposit√≥rio configurado iremos adicionar o "script" para gerar dos arquivos. No reposit√≥rio, v√° em Actions.

Criando o gerador

Em seguida vamos utilizar ‚ÄúSimple workflow‚Äù apenas com o m√≠nimo necess√°rio para rodar o codigo.

Configurando

Agora √© apenas alterar o nome do arquivo e colar o c√≥digo da configura√ß√£o com o seu usu√°rio.

Alterar jnome do arquivo

alterando o username



# Nome da Actions:  
name: Snake Game

# Controlador do tempo que sera feito a atualiza√ß√£o dos arquivos.
on:
  schedule:
      # Ser√° atualizado a cada 5 horas.
    - cron: "0 */5 * * *"

# Permite executar na na lista de Actions (utilizado para testes de build).
  workflow_dispatch:

# Regras
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - uses: actions/checkout@v2

    # Repositorio que ser√° utilizado para gerar os arquivos.
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: nomeUsuario #Seu usuario
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      - run: git status

      # Para as atualiza√ß√µes.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true

      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
